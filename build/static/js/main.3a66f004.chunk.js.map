{"version":3,"sources":["shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","shared/checkAuth.js","components/TodoComponent.js","redux/Todo.js","components/LoginComponent.js","components/RegisterComponent.js","components/HeaderComponent.js","components/LogoutComponent.js","components/FooterComponent.js","components/MainComponent.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","deleteTodo","todo","type","payload","todosLoading","todosFailed","errmess","isAuthenticated","JSON","parse","localStorage","getItem","TodoList","handleStatus","removeTodo","status","ListGroupItem","className","Button","color","onClick","_id","task","Todo","props","id","updateStatus","handleInputKey","event","key","postTodo","state","setState","handleInputChange","console","log","target","value","this","fetchTodos","to","Todos","isLoading","errMess","todoList","todos","map","idx","class","ListGroup","aria-hidden","Input","placeholder","name","onKeyUp","onChange","Component","connect","dispatch","fetch","method","withCredentials","headers","credentials","then","response","ok","error","Error","statusText","message","json","addTodos","catch","body","stringify","alert","newTodo","user_id","action","concat","filter","Login","handleSubmit","preventDefault","_this","login","email","password","setItem","bind","authenticator","Form","onSubmit","FormGroup","Label","for","Register","successfull","check","row","Header","handleLogout","removeItem","updateLogin","isNavOpen","toggleNav","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","Footer","Main","val","isLogin","path","component","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a66f004.chunk.js","sourcesContent":["export const baseUrl = \"http://localhost:3001/api/\";","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addTodo = (todo) => ({\r\n    type: ActionTypes.ADD_TODO,\r\n    payload: todo\r\n});\r\n\r\nexport const addTodos = (todos) => ({\r\n    type: ActionTypes.ADD_TODOS,\r\n    payload: todos\r\n});\r\n\r\nexport const updateTodo = (todo) => ({\r\n    type: ActionTypes.UPDATE_TODO,\r\n    payload: todo\r\n});\r\n\r\nexport const postTodo = (task, status)=>(dispatch)=>{\r\n    const newTodo = {\r\n        task: task,\r\n        status: status,\r\n        user_id: JSON.parse(localStorage.getItem(\"user\"))._id\r\n    }\r\n    \r\n    return fetch(baseUrl + \"todos\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newTodo),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            // response.status means error code (300, 400, 404) samjhe :)\r\n            var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n            console.log(response);\r\n            console.log(error.response);\r\n            error.response = response;\r\n            throw error;            \r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addTodo(response)))\r\n    .catch((error)=>{ console.log(\"Post Todo : \", error.message);\r\n                      alert('Your Todo could not be posted\\nError: '+error.message)\r\n                    })\r\n}\r\n\r\n\r\nexport const fetchTodos = () => (dispatch) => {\r\n    dispatch(todosLoading(true));\r\n\r\n    return fetch(baseUrl + \"todos/\" + JSON.parse(localStorage.getItem(\"user\"))._id,\r\n    {\r\n        method: \"GET\",\r\n        withCredentials: true,\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Cache': 'no-cache'\r\n        },\r\n        credentials: \"same-origin\"  \r\n      })\r\n    .then(response => {\r\n        console.log(\"response\");\r\n        console.log(response)\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            // response.status means error code (300, 400, 404) samjhe :)\r\n            var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n            console.log(response);\r\n            console.log(error.response);\r\n            error.response = response;\r\n            throw error;            \r\n        }\r\n    },\r\n    error => {\r\n        \r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(todos =>{\r\n        dispatch(addTodos(todos))\r\n    })\r\n    .catch((error)=>{\r\n        dispatch(todosFailed(error.message))\r\n    })\r\n}\r\n\r\nexport const removeTodo = (id) => (dispatch) => {\r\n\r\n    return fetch(baseUrl + \"todos/\" + id, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n        credentials : \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            // response.status means error code (300, 400, 404) samjhe :)\r\n            var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n            console.log(response);\r\n            console.log(error.response);\r\n            error.response = response;\r\n            throw error;            \r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n                        console.log(response);\r\n                        dispatch(deleteTodo(response))\r\n                      })\r\n    .catch((error)=>{ console.log(\"Delete Todo : \", error.message);\r\n                      alert('Your Todo could not be Deleted\\nError: '+error.message)\r\n                    })\r\n}\r\n\r\nexport const updateStatus = (id, status) => (dispatch) => {\r\n\r\n    return fetch(baseUrl + \"todos/\" + id, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({status: status}),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials : \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            // response.status means error code (300, 400, 404) samjhe :)\r\n            var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n            console.log(response);\r\n            console.log(error.response);\r\n            error.response = response;\r\n            throw error;            \r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(updateTodo(response)))\r\n    .catch((error)=>{ console.log(\"Post Todo : \", error.message);\r\n                      alert('Your Todo could not be posted\\nError: '+error.message)\r\n                    })\r\n}\r\n\r\nexport const deleteTodo = (todo) => ({\r\n    type: ActionTypes.DELETE_TODO,\r\n    payload: todo\r\n})\r\n\r\n\r\nexport const todosLoading = () => ({\r\n    type: ActionTypes.TODOS_LOADING\r\n})\r\n\r\nexport const todosFailed = (errmess) => ({\r\n    type: ActionTypes.TODOS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\n\r\n\r\n\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const ADD_TODOS = \"ADD_TODOS\";\r\nexport const TODOS_LOADING = \"TODOS_LOADING\";\r\nexport const TODOS_FAILED = \"TODOS_FAILED\";\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\n\r\n","export const isAuthenticated = () =>{\r\n    return JSON.parse(localStorage.getItem(\"loggedIn\"))\r\n}","import React, { Component } from \"react\"\r\nimport { ListGroup, ListGroupItem, Button, Input } from 'reactstrap';\r\nimport { fetchTodos, updateStatus, removeTodo, postTodo } from '../redux/ActionCreators';\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { isAuthenticated} from  '../shared/checkAuth'\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n      Todos: state.Todos\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchTodos: () => { dispatch(fetchTodos())},\r\n    updateStatus: (id, status) => {dispatch(updateStatus(id, status))},\r\n    removeTodo: (id) => {dispatch(removeTodo(id))},\r\n    postTodo : (task, status) => {dispatch(postTodo(task, status))}\r\n})\r\n\r\nfunction TodoList ({todo, handleStatus, removeTodo}){\r\n    return (\r\n            todo.status ? \r\n                <ListGroupItem>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3 ml-auto text-right\"><Button color=\"white\" onClick={ ()=>{handleStatus(todo._id, !todo.status)} } ><span className=\"fa fa-check-square-o\"></span></Button></div>\r\n                        <div className=\"col-md-4 o text-center\"><h5 className=\"crossed-line\">{todo.task}</h5></div>\r\n                        <div className=\"col-md-3 mr-auto\"><Button color=\"white\" onClick={ ()=>{removeTodo(todo._id)} } ><span className=\"fa fa-trash-o\"></span></Button></div>\r\n                    </div>                    \r\n                </ListGroupItem>\r\n                : \r\n                <ListGroupItem>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3 ml-auto text-right\"><Button color=\"white\" onClick={ ()=>{handleStatus(todo._id, !todo.status)} } ><span className=\"fa fa-square-o\"></span></Button></div>\r\n                        <div className=\"col-md-4 o text-center\"><h5>{todo.task}</h5></div>\r\n                        <div className=\"col-md-3 mr-auto\"><Button color=\"white\" onClick={ ()=>{removeTodo(todo._id)} } ><span className=\"fa fa-trash-o\"></span></Button></div>\r\n                    </div>   \r\n                </ListGroupItem>          \r\n            \r\n    )\r\n}\r\n\r\nclass Todo extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            task: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchTodos();\r\n    }\r\n\r\n    handleStatus = (id, status) => {\r\n        this.props.updateStatus(id, status);\r\n    }\r\n    \r\n    handleInputKey = (event) => {\r\n        if(event.key === \"Enter\"){\r\n\r\n            this.props.postTodo(this.state.task, false);\r\n            this.setState({\r\n                task: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            task: event.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        if(!isAuthenticated()){\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n        console.log(\"in Component\");\r\n        console.log(this.props);\r\n        if(this.props.Todos.isLoading){\r\n            return(\r\n                <div>\r\n                    <h4>Loading Todos List</h4>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n        if(this.props.Todos.errMess){\r\n            return(\r\n                <div>\r\n                    <h4>Error {this.props.Todos.errMess}</h4>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            const todoList = this.props.Todos.todos.map((todo, idx)=>{\r\n                return <TodoList todo={todo} handleStatus={this.handleStatus} removeTodo={this.props.removeTodo} key={idx} />\r\n            });\r\n            return (\r\n                <div class=\"container\">                 \r\n                    <ListGroup>\r\n                        <ListGroupItem>\r\n                        <div className=\"row input-handler\">\r\n                            <div className=\"col-md-1 ml-auto text-right\"><i class=\"fa fa-pencil-square\" aria-hidden=\"true\"></i></div>\r\n                            <div className=\"col-md-4 mr-auto\">\r\n                                <Input type=\"text\" placeholder=\"TODO\" value={this.state.task} name=\"task\"\r\n                                    onKeyUp={this.handleInputKey}\r\n                                    onChange={this.handleInputChange} />\r\n                            </div>\r\n                        </div>\r\n                        </ListGroupItem>\r\n                        {todoList}\r\n                    </ListGroup>\r\n                </div>                \r\n            )\r\n        }\r\n    }\r\n}\r\n    \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Todo);","import * as ActionTypes from './ActionTypes';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\nexport const Todos = (state={\r\n    isLoading: true, \r\n    errMess: null,\r\n    todos: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_TODO:\r\n            return {...state, todos: state.todos.concat(action.payload)};\r\n\r\n        case ActionTypes.ADD_TODOS:\r\n            var todo = action.payload;\r\n            return {...state, isLoading: false, errMess: null, todos:action.payload}\r\n\r\n        case ActionTypes.UPDATE_TODO:\r\n        //    console.log(action.payload);\r\n        //    console.log(state.todos.indexOf({\"_id\": action.payload._id}));\r\n            return {...state, todos: state.todos.map((todo)=>{ return todo._id === action.payload._id ? action.payload : todo } ) };\r\n\r\n        case ActionTypes.DELETE_TODO:\r\n            console.log(action.payload);\r\n        //    console.log(state.todos.indexOf({\"_id\": action.payload._id}));\r\n            return {...state, todos: state.todos.filter((todo)=>{ return todo._id !== action.payload._id } ) };                \r\n\r\n        case ActionTypes.TODOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, todos:[]}\r\n\r\n        case ActionTypes.TODOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, todos:[]}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { Redirect} from 'react-router-dom'\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { isAuthenticated} from  '../shared/checkAuth'\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            error : \"\"\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind();\r\n        this.handleSubmit = this.handleSubmit.bind();\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n    \r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });        \r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state)\r\n        console.log(\"current state is: \"+JSON.stringify(this.state));\r\n    //    alert(\"current state is: \"+JSON.stringify(this.state));\r\n        // event.preventDefault();\r\n        const _this = this;\r\n\r\n            const login = {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n            \r\n            return fetch(baseUrl + \"users/login\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify(login),\r\n                withCredentials: true,                    \r\n                credentials: 'same-origin', // credentials moved to here fixed the issue\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Cache': 'no-cache',\r\n                }\r\n            })\r\n            .then(response => { \r\n                if(response.ok){\r\n                    return response;\r\n                }\r\n                else{\r\n                    // response.status means error code (300, 400, 404) samjhe :)\r\n                    var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n                    console.log(response);\r\n                    console.log(error.response);\r\n                    error.response = response;\r\n                    throw error;            \r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then((response) => { localStorage.setItem(\"loggedIn\", \"true\");\r\n                                  localStorage.setItem(\"user\", JSON.stringify(response));\r\n                                    _this.setState({error : \"\"})\r\n                                 })\r\n            .catch((error)=>{ console.log(\"Post Todo : \", error.message);\r\n                                _this.setState({..._this.state, error : error.message})\r\n                            })\r\n    }\r\n\r\n    render(){\r\n        if(isAuthenticated()){\r\n            this.props.authenticator(isAuthenticated());\r\n            return <Redirect to=\"/todos\" />\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 ml-auto mr-auto\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <h4>LogIn</h4>\r\n                            {this.state.error ? <h4 class=\"alert alert-danger\">{this.state.error}</h4> : <div></div>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\">Email</Label>\r\n                                <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} placeholder=\"email\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"examplePassword\">Password</Label>\r\n                                <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} placeholder=\"password\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Button color=\"success\">Submit</Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login\r\n\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom'\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { isAuthenticated} from  '../shared/checkAuth'\r\n\r\nclass Register extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error : \"\",\r\n            successfull: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind();\r\n        this.handleSubmit = this.handleSubmit.bind();\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n    \r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });        \r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state)\r\n        console.log(\"current state is: \"+JSON.stringify(this.state));\r\n    //    alert(\"current state is: \"+JSON.stringify(this.state));\r\n        // event.preventDefault();\r\n        const _this = this;\r\n\r\n            const Register = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n            \r\n            return fetch(baseUrl + \"users/register\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify(Register),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            .then(response => {\r\n                if(response.ok){\r\n                    return response;\r\n                }\r\n                else{\r\n                    // response.status means error code (300, 400, 404) samjhe :)\r\n                    var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n                    console.log(response);\r\n                    console.log(error.response);\r\n                    error.response = response;\r\n                    throw error;            \r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then((response) => { alert(\"Registration Successfull\") \r\n                                  _this.setState({..._this.state, successfull : true})})\r\n            .catch((error)=>{ console.log(\"Post Todo : \", error.message);\r\n                                _this.setState({..._this.state, error : error.message})\r\n                            })\r\n    }\r\n\r\n    render(){\r\n        if(isAuthenticated()){\r\n            return <Redirect to=\"/todos\" />\r\n        }\r\n        if(this.state.successfull){\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 ml-auto mr-auto\">\r\n                        <h4>Register</h4>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            {this.state.error ? <h4 class=\"alert alert-danger\">{this.state.error}</h4> : <div></div>}\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Email</Label>\r\n                                <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.name} onChange={this.handleInputChange} placeholder=\"name\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleInputChange} placeholder=\"email\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"password\">Password</Label>\r\n                                <Input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleInputChange} placeholder=\"password\" />\r\n                            </FormGroup>\r\n                            <FormGroup check row>\r\n                                <Button color=\"success\">Submit</Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem }  from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { isAuthenticated} from  '../shared/checkAuth'\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          isNavOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      handleLogout = () => {\r\n        return fetch(baseUrl + \"users/logout\", {\r\n            withCredentials: true,                  \r\n            credentials: 'same-origin', // credentials moved to here fixed the issue\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Cache': 'no-cache'\r\n            }\r\n        })\r\n        .then(response => { \r\n            if(response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                // response.status means error code (300, 400, 404) samjhe :)\r\n                var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n                console.log(response);\r\n                console.log(error.response);\r\n                error.response = response;\r\n                throw error;            \r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then((response) => { localStorage.removeItem(\"loggedIn\")\r\n                               })\r\n        .catch((error)=>console.log(\"Post Todo : \", error.message))\r\n    }\r\n\r\n    updateLogin = () => {\r\n        this.props.authenticator(false);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            TODO App\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            \r\n                                { !isAuthenticated() ? \r\n                                    <Nav navbar className=\"ml-auto\">\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to=\"/login\">\r\n                                                <span className=\"fa fa-home fa-lg\"></span>Login\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to='/register'>\r\n                                                <span className=\"fa fa-info fa-lg\"></span> Register\r\n                                                </NavLink>\r\n                                        </NavItem>\r\n                                    </Nav>\r\n                                        : \r\n                                    <Nav className=\"ml-auto\" navbar>    \r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\"  to=\"\" >\r\n                                                <span className=\"fa fa-user fa-lg\"></span>Hey! { JSON.parse(localStorage.getItem(\"user\")).name }\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\"  to=\"logout\" >\r\n                                                <span className=\"fa fa-info fa-lg\"></span> LogOut\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                    </Nav>\r\n                                }\r\n                        </Collapse>\r\n                    </div>  \r\n                </Navbar>\r\n            </React.Fragment> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nexport default (props) => {\r\n    \r\n    localStorage.removeItem(\"loggedIn\");\r\n    localStorage.removeItem(\"user\");\r\n    props.authenticator(false)\r\n    return(\r\n        <Redirect to=\"/\" />\r\n    );\r\n}","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 - .... (: Aliakber Saifuddin :)</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\"\r\nimport Login from './LoginComponent'\r\nimport Register from './RegisterComponent'\r\nimport Todo from './TodoComponent'\r\nimport Header from './HeaderComponent'\r\nimport Logout from './LogoutComponent'\r\nimport Footer from './FooterComponent'\r\nimport { Switch, Route, BrowserRouter} from 'react-router-dom'\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      console.log(props);\r\n      this.state = {\r\n          isLogin : false\r\n      }\r\n    }\r\n\r\n    authenticator = (val) => {\r\n        this.setState({\r\n            isLogin: val\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <BrowserRouter> \r\n                <Header isLogin={this.state.isLogin}/>\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={ ()=><Login authenticator={this.authenticator}/> } />\r\n                        <Route path=\"/register\" component={ Register } />\r\n                        <Route path=\"/todos\" component={ Todo } />\r\n                        <Route path=\"/logout\" component={ ()=><Logout authenticator={this.authenticator}/> } />\r\n                        <Route path=\"/\" component={ ()=><Login authenticator={this.authenticator}/> } />\r\n                    </Switch>\r\n                <Footer />\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Main;\r\n  ","import React from 'react';\nimport Todo from './components/TodoComponent' \nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport Main from './components/MainComponent'\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store} >\n        <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Todos } from './Todo';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            Todos: Todos\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}